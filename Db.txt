UserInfo=>
1.Id.
2.FullName.
3.ImageUrl.
4.Designation.
5.Team.
6.Role.
7.Location.

Questions->
1.Id
2.AskedBy
3.Title
4.Description
5.AskedOn(DateTime)
6.Category

QuestionActivity
1.Id
2.QuestionId
3.Activitystatus
4.ActivityBy
5.Views

Answers->
1.Id
2.AnswerOf
3.Description
7.AnsweredOn
8.AnsweredBy

AnswerActivity=>
1.Id
2.UserId
3.ActivityType(Like/Dislike/MarkAsBest)

Categories->
1.Id
2.Title
3.Description.
4.AddedBy
5.AddedOn










QuestionViewModel->
1.Question
2.Description
3.Category

CategoryViewModel
1.CategoryName
2.CategoryDescription


-----------------------------
create view GetAllUsers
as 
select ud.Id,ud.Dislikes,ud.Likes,ud.QuestionsAnswered,ud.QuestionsAsked,ud.QuestionsSolved
,ui.FullName,ui.Designation,ui.ImageUrl,ui.Location,ui.Role,ui.Team
from UsersData ud join UsersInfo ui on 
ud.Id = ui.Id;

select * from GetAllUsers;


select qa.QuestionId,
count(qa.Viewed) as Views,
ui.FullName as AskedBy, 
q.Title as Title,
q.Description,
ui.ImageUrl
from QuestionActivities qa
join Questions q on q.Id = qa.QuestionId 
join UsersInfo ui on ui.Id = q.AskedBy
where qa.Viewed = 1
group by qa.QuestionId,q.AskedBy,FullName,q.Title,q.Description,ui.ImageUrl;

create view QuestionUpVotes
as
select q.Id,
case
	when tb.UpVotes is null then 0
	else tb.UpVotes
end as UpVotes
from Questions q left join 
(select qa.QuestionId,count(*) as UpVotes from QuestionActivities qa
where qa.Activity = 3
group by qa.QuestionId) as tb on q.Id=tb.QuestionId;



select qa.QuestionId,
count(qa.Viewed) as Views,
ui.FullName as AskedBy, 
q.Title as Title,
q.Description,
ui.ImageUrl,
ac.AnswersCount
from QuestionActivities qa
join Questions q on q.Id = qa.QuestionId 
join UsersInfo ui on ui.Id = q.AskedBy
join AnswersCount ac on ac.Id = q.Id
where qa.Viewed = 1
group by qa.QuestionId,q.AskedBy,FullName,q.Title,q.Description,ui.ImageUrl,ac.AnswersCount;





